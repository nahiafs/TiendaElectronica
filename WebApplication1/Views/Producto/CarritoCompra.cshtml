@model List<MusicaLMFL.Models.TProducto>
@{
    ViewBag.Title = "CarritoCompra";
    Layout = "~/Views/Plantilla/Plantilla.cshtml";
}

<div class="container">
    <center>
        <div class="modal-body row" id="modal-champions-body">
            @foreach (var producto in Model)
            {
                <div id="@producto.CodProducto" style="width:20%;">
                    <div><img src="@producto.Imagen" style="width:100%;" /></div>
                    <span>@producto.Nombre</span>
                    <p>@producto.Precio</p>
                    <div>
                        <button class="btn btn-primary">
                            @Ajax.ActionLink("Añadir al carrito", "obtenerProducto", "Producto", new { CodProducto = @producto.CodProducto }, new AjaxOptions()
                            {
                                HttpMethod = "POST",
                                OnSuccess = "success",
                            }, new { @style = "color:white; text-decoration:none;" })
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-cart" viewBox="0 0 16 16">
                                <path d="M0 1.5A.5.5 0 0 1 .5 1H2a.5.5 0 0 1 .485.379L2.89 3H14.5a.5.5 0 0 1 .491.592l-1.5 8A.5.5 0 0 1 13 12H4a.5.5 0 0 1-.491-.408L2.01 3.607 1.61 2H.5a.5.5 0 0 1-.5-.5zM3.102 4l1.313 7h8.17l1.313-7H3.102zM5 12a2 2 0 1 0 0 4 2 2 0 0 0 0-4zm7 0a2 2 0 1 0 0 4 2 2 0 0 0 0-4zm-7 1a1 1 0 1 1 0 2 1 1 0 0 1 0-2zm7 0a1 1 0 1 1 0 2 1 1 0 0 1 0-2z" />
                            </svg>
                        </button>
                    </div>
                    <div><br/></div>
                </div>
            }
        </div>
    </center>
</div>

<div>
    <center class="carrito">
        <div id="items" class="col-sm-8 row"></div>
        <div class="col-sm-4">
            <h2 style="text-align:left;">Carrito</h2>
            <ul id="carrito" class="list-group"></ul>
            <hr>
            <p class="text-right">Total: <span id="total"></span>&euro;</p>
            <div class="text-right"><input id="botonComprar" type="button" value="Comprar" onclick="comprar()" class="btn btn-primary" /></div>
            <br/>
            <p class="text-left">Mensaje: <span id="mensaje"></span></p>
        </div>
    </center>
</div>

<script>
    let $items = document.querySelector('#items');
    let total = 0;
    let $carrito = document.querySelector('#carrito');
    let $total = document.querySelector('#total');
    let $mensaje = document.querySelector('#mensaje');
    let carrito;

    // Tenemos que poner estas comprobaciones para que funcione la recuperación
    // del carro en el localStorage
    if (localStorage.carrito !== undefined)
        carrito = JSON.parse(localStorage.carrito);
    if (carrito === undefined)
        carrito = []
    else
    {
        renderizarCarrito(carrito);
        calcularTotal(carrito);
    }

    //*************************************************
    // Funciones
    //*************************************************
    function anyadirCarrito(dato) {
        var encontrado = false;
        if (carrito.length == 0) {
            dato[0].Cantidad = 1;
            carrito.push(dato)
        }
        else {
            var cantidad = 1;
            for (var i = 0; i < carrito.length; i++) {
                var codProducto = carrito[i][0].CodProducto;
                if (codProducto == dato[0].CodProducto && !encontrado) {
                    carrito[i][0].Cantidad++;
                    encontrado = true;
                }
            }
            if (!encontrado) {
                dato[0].Cantidad = cantidad;
                carrito.push(dato);
            }
        }
        calcularTotal(carrito);
        renderizarCarrito(carrito);
        init();
    }

    function renderizarCarrito(carrito) {
        $carrito.textContent = '';
        // Generamos los Nodos a partir de carrito
        var indice=0;
        for (let miItem of carrito)
        {

            // Creamos el nodo del item del carrito
            let miNodo = document.createElement('li');
            miNodo.classList.add('list-group-item', 'text-right');
            // ---------- VER ------------------
            miNodo.textContent = `${parseInt(miItem[0].Cantidad)} - ${miItem[0]['Nombre']} - ${parseInt(miItem[0]['Precio']) * parseInt(miItem[0].Cantidad)}€`;
            //miNodo.textContent = `${miItem[0]['Nombre']} - ${parseInt(miItem[0]['Precio'])}€`;
            // Boton de borrar
            let miBoton = document.createElement('button');
            miBoton.classList.add('btn', 'btn-danger', 'mx-5');
            miBoton.textContent = 'X';
            miBoton.setAttribute('posicion', indice);
            indice=indice+1;
            miBoton.addEventListener('click', borrarItemCarrito);
            // Mezclamos nodos
            miNodo.appendChild(miBoton);
            $carrito.appendChild(miNodo);
        }
    }

    function borrarItemCarrito() {
        let posicion = this.getAttribute('posicion');
        carrito.splice(posicion, 1);
        localStorage.removeItem("carrito");
        localStorage.carrito = JSON.stringify(carrito);
        renderizarCarrito(carrito);
        calcularTotal(carrito);
        init();
    }

    function calcularTotal(carrito) {
        // Limpiamos precio anterior
        total = 0;
        // Recorremos el array del carrito
        for (let miItem of carrito) {
            var cantidad = parseInt(miItem[0].Cantidad);
            // ---------- VER ------------------
            var totalProducto = parseInt(miItem[0]['Precio']) * cantidad;
            total = total + totalProducto;
            //total = total + parseInt(miItem[0]['Precio']);
        }
        // Formateamos el total para que solo tenga dos decimales
        let totalDosDecimales = total.toFixed(2);
        // Renderizamos el precio en el HTML
        $total.textContent = totalDosDecimales;
    }

    function success(data) {
        console.log(data.Nombre);
        anyadirCarrito(data);
        localStorage.carrito=JSON.stringify(carrito);
    }

    function comprar() {
        if (carrito.length > 0) {
            var uri = '@Url.Action("comprar", "Producto")';
            var lineas = lineasFactura(carrito);
            //EN ESTE APARTADO CUANDO LA COMPRA SEA CORRECTA SE SACARÁ MENSAJE INFORMATIVO Y SE BORRARÁ EL CARRITO
            //DE localStorage.
            $.ajax({
                url: uri,
                data: JSON.stringify(lineas),
                type: 'POST',
                success: exito,
                contentType: 'application/json'
            });
        }
        
    }

    function exito(data) {
        // Esta función se ejecuta cuando la petición AJAX ha tenido éxito visualizando el mensaje en html.
        $mensaje.textContent = data;
        // Se realiza el borrado del carrito del almacén local una vez que la compra ha tenido éxito.
        localStorage.removeItem("carrito");
        $carrito.textContent = '';
        $total.textContent = '';

    }

    function lineasFactura(carrito)
    {
        var lineas = [];
        var lf = {};
        for (let miItem of carrito) {
            lf = {};
            lf.CodFactura = "";
            lf.Producto = miItem[0].CodProducto;
            lf.Cantidad = miItem[0].Cantidad;
            lf.Total = miItem[0].Precio * lf.Cantidad;
            lineas.push(lf);
        }
        return lineas;
    }
</script>
